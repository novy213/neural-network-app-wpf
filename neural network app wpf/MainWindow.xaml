<Window x:Class="neural_network_app_wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:neural_network_app_wpf"
        mc:Ignorable="d"
        x:Name="Window"
        Title="MainWindow" Height="450" Width="1400">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="20" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFDEAD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFDEAD"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#D4B990"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#D4B990"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
        <SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
        <SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
        <Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
            <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
            <Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border CornerRadius="20" x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
                        <Condition Property="IsSelectionActive" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid Background="#FFFFB9">
        <Grid x:Name="MenuGrid" Visibility="Visible">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="A.I neural network app" FontSize="50" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Arial Rounded MT Bold"/>
            <Button IsDefault="True" Background="#F5D6A6" FontSize="16" Style="{DynamicResource ButtonStyle1}" Content="Start!" Grid.Row="1" Width="120" Height="40" Grid.ColumnSpan="2" Click="StartButton_click"/>
        </Grid>
        <Grid x:Name="ItemsCountGrid" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Enter the number of items" FontSize="50" Grid.ColumnSpan="2" Grid.RowSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Arial Rounded MT Bold" />
            <TextBox FontSize="16" Style="{DynamicResource TextBoxStyle1}" x:Name="numberOfItemsXAML" Grid.Row="1" VerticalAlignment="Center" Grid.ColumnSpan="2" Width="200" Padding="10 13" PreviewTextInput="numberOfItemsXAML_PreviewTextInput"/>
            <TextBlock x:Name="Alert" Grid.Row="1" FontWeight="Bold" Grid.ColumnSpan="2" Foreground="Red" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
            <Button Background="#F5D6A6" VerticalAlignment="Top" FontSize="16" Style="{DynamicResource ButtonStyle1}" Content="Back" Grid.Column="1" Grid.Row="3" Width="120" Height="40" HorizontalAlignment="Left" Margin="10" Click="CancelNumberFiels_click"/>
            <Button Background="#F5D6A6" VerticalAlignment="Top" FontSize="16" Style="{DynamicResource ButtonStyle1}" Content="Next" Grid.Row="3" Width="120" Height="40" HorizontalAlignment="Right" Margin="10" IsDefault="True" Click="NextNumberFiles_click"/>
        </Grid>
        <Grid x:Name="InsertValues" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="60"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Insert values" FontSize="50" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Arial Rounded MT Bold"/>
            <TextBox PreviewTextInput="numberOfItemsXAML_PreviewTextInput" FontSize="14" Style="{DynamicResource TextBoxStyle1}" x:Name="DiameterXAML" VerticalAlignment="Center" Grid.Row="1" Width="200" Padding="10 13" HorizontalAlignment="Right" Margin="10"/>
            <TextBlock x:Name="CurrentValues" FontSize="12" Margin="100 0" FontWeight="Bold" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center"/>
            <TextBlock x:Name="RemaningValues" FontSize="12" Margin="100 0" FontWeight="Bold" Grid.Row="2" Grid.Column="1" HorizontalAlignment="left" VerticalAlignment="Center"/>
            <TextBox PreviewTextInput="numberOfItemsXAML_PreviewTextInput" FontSize="14" Style="{DynamicResource TextBoxStyle1}" x:Name="LengthXAML" Grid.Row="2" Width="200" VerticalAlignment="Center" Padding="10 13" HorizontalAlignment="Right" Margin="10"/>
            <Button IsDefault="True" Background="#F5D6A6" VerticalAlignment="Top" FontSize="16" Style="{DynamicResource ButtonStyle1}" Content="Add" Grid.ColumnSpan="2" Grid.Row="3" Width="80" Height="35" HorizontalAlignment="Center" Margin="5" Click="InsertValueAdd"/>
            <Button Background="#F5D6A6" VerticalAlignment="Top" FontSize="16" Style="{DynamicResource ButtonStyle1}" Content="Back" Grid.Column="1" Grid.Row="4" Width="120" Height="40" HorizontalAlignment="Left" Margin="10" Click="InsertValueBack_click"/>
            <Button Background="#F5D6A6" VerticalAlignment="Top" FontSize="16" Style="{DynamicResource ButtonStyle1}" Content="Next" Grid.Row="4" Width="120" Height="40" HorizontalAlignment="Right" Margin="10" Click="InsertValueNext_click"/>
            <TextBlock x:Name="Alert1" Grid.Row="3" Grid.ColumnSpan="2" FontWeight="Bold" Foreground="Red" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
            <TextBlock Text="Diameter" Grid.Column="1" Grid.Row="1" VerticalAlignment="Center" FontSize="20" FontFamily="Arial Rounded MT Bold"/>
            <TextBlock Text="Length" Grid.Column="1" Grid.Row="2" VerticalAlignment="Center" FontSize="20" FontFamily="Arial Rounded MT Bold"/>
        </Grid>
        <Grid x:Name="MainGrid" Visibility="Collapsed">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <ListView Grid.RowSpan="6" Margin="10 15" x:Name="ResultListView">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Id" Width="40" DisplayMemberBinding="{Binding Id}"/>
                        <GridViewColumn Header="Computer" DisplayMemberBinding="{Binding Computer}"/>
                        <GridViewColumn Header="We" Width="50" DisplayMemberBinding="{Binding We}"/>
                        <GridViewColumn Header="Compare">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Compare}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Compare}" Value="True">
                                                        <Setter Property="Foreground" Value="Green" />
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Compare}" Value="False">
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Diameter" DisplayMemberBinding="{Binding Diameter}"/>
                        <GridViewColumn Header="Length" DisplayMemberBinding="{Binding Length}"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <Button Content="Finish" Grid.Column="1" Width="120" Height="40" Style="{DynamicResource ButtonStyle1}" Background="#F5D6A6" VerticalAlignment="Center" FontSize="16" Click="MainGridStop_click"/>
            <Button IsDefault="True" Content="Next attempt" Grid.Row="1" Grid.Column="1" Width="120" Height="40" Style="{DynamicResource ButtonStyle1}" Background="#F5D6A6" FontSize="16" Click="NextAttempt_click"/>
            <Button Content="Skip" Grid.Row="2" Grid.Column="1" Width="120" Height="40" Style="{DynamicResource ButtonStyle1}" Background="#F5D6A6" FontSize="16" Click="Skip_click"/>
            <TextBlock Text="Current attempt" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" Margin="10,0" FontWeight="Bold"/>
            <TextBlock Text="Result List" VerticalAlignment="Top" Margin="10,0,10,0" FontWeight="Bold"/>
            <TextBlock x:Name="Skip" Foreground="Green" Grid.Row="2" Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="10,-3" FontWeight="Bold"/>
            <ListView Grid.RowSpan="6" Grid.Row="3" Grid.Column="1" Margin="10,5" x:Name="CurrentAttempt">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Id" Width="40" DisplayMemberBinding="{Binding Id}"/>
                        <GridViewColumn Header="Computer" DisplayMemberBinding="{Binding Computer}"/>
                        <GridViewColumn Header="We" Width="50" DisplayMemberBinding="{Binding We}"/>
                        <GridViewColumn Header="Compare">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Compare}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Compare}" Value="True">
                                                        <Setter Property="Foreground" Value="Green" />
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Compare}" Value="False">
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Diameter" DisplayMemberBinding="{Binding Diameter}"/>
                        <GridViewColumn Header="Length" DisplayMemberBinding="{Binding Length}"/>
                    </GridView>
                </ListView.View>
            </ListView>
        </Grid>
        <Grid x:Name="NeuronSelect" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="1*"/>
                <RowDefinition Height="100"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Choose how many neurons you want to use" Grid.ColumnSpan="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="24" FontFamily="Arial Rounded MT Bold"/>
            <Button Content="Single neuron" HorizontalAlignment="Right" Margin="20 0" FontSize="18" Grid.Row="1" Width="160" Height="50" Style="{DynamicResource ButtonStyle1}" Background="#F5D6A6" Click="SingleNeuron_click"/>
            <Button Content="Multi neurons" HorizontalAlignment="Left" Margin="20 0" FontSize="18" Grid.Row="1" Grid.Column="1" Width="160" Height="50" Style="{DynamicResource ButtonStyle1}" Background="#F5D6A6" Click="MultiNeurons_click"/>
            <Button Content="Ok" Visibility="Collapsed" HorizontalAlignment="Left" Margin="120 0" x:Name="ApplyNumberOfNeurons" FontSize="18" Grid.Row="2" Grid.Column="1" Width="120" Height="40" Style="{DynamicResource ButtonStyle1}" Background="#F5D6A6" Click="ApplyNumberOfNeurons_Click"/>
            <TextBox FontSize="16" Visibility="Collapsed" Style="{DynamicResource TextBoxStyle1}" x:Name="numberOfNeurons" Grid.Row="2" VerticalAlignment="Center" Grid.ColumnSpan="2" Width="200" Padding="10 13" PreviewTextInput="numberOfItemsXAML_PreviewTextInput"/>
            <TextBlock x:Name="Alert3" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="30" Grid.ColumnSpan="2" Grid.Row="2" FontWeight="Bold" Foreground="Red"/>
        </Grid>
        <Grid x:Name="MultiNeuronsGrid" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="70"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="70"/>
                <RowDefinition Height="1*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="1*"/>
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Neurons List" HorizontalAlignment="Left" VerticalAlignment="Top" Grid.Column="1" Grid.RowSpan="2" Margin="10,61,0,0" Grid.Row="2" FontWeight="Bold"/>
            <TextBlock Text="Attemp List" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="10,0,0,0" FontWeight="Bold"/>
            <ListView x:Name="NeuronsList" Grid.Row="3" Grid.Column="1" Margin="10" SelectionChanged="NeuronsList_SelectionChanged">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Id" Width="40" DisplayMemberBinding="{Binding Id}"/>
                        <GridViewColumn Header="Correct" Width="70">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Correct}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Correct}" Value="True">
                                                        <Setter Property="Foreground" Value="Green" />
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Correct}" Value="False">
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Attemp" Width="70" DisplayMemberBinding="{Binding IdCorrect}"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <ListView x:Name="SelectedNeuronAttemp" Grid.RowSpan="4" Margin="10 15">
                <ListView.View>
                    <GridView>
                        <GridViewColumn Header="Id" Width="40" DisplayMemberBinding="{Binding Id}"/>
                        <GridViewColumn Header="Computer" DisplayMemberBinding="{Binding Computer}"/>
                        <GridViewColumn Header="We" Width="50" DisplayMemberBinding="{Binding We}"/>
                        <GridViewColumn Header="Compare">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Compare}">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Compare}" Value="True">
                                                        <Setter Property="Foreground" Value="Green" />
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding Compare}" Value="False">
                                                        <Setter Property="FontWeight" Value="Bold" />
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Diameter" DisplayMemberBinding="{Binding Diameter}"/>
                        <GridViewColumn Header="Length" DisplayMemberBinding="{Binding Length}"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <Button Content="Finish" Grid.Column="1" Width="120" Height="40" Style="{DynamicResource ButtonStyle1}" Background="#F5D6A6" VerticalAlignment="Center" FontSize="16" Click="MainGridStop_click"/>
            <Button Content="Next" IsDefault="True" Grid.Row="2" Grid.Column="1" Width="120" Height="40" Style="{StaticResource ButtonStyle1}" Background="#F5D6A6" FontSize="16" Click="MultiNeuronNext_click"/>
            <Button Content="Skip"  Grid.Row="1" Grid.Column="1" Width="120" Height="40" Style="{StaticResource ButtonStyle1}" Background="#F5D6A6" FontSize="16" HorizontalAlignment="Left" Margin="200 0" Click="MultiNeuronSkip_Click"/>
            <Button Content="Skip all"  Grid.Row="1" Grid.Column="1" Width="120" Height="40" Style="{StaticResource ButtonStyle1}" Background="#F5D6A6" FontSize="16" HorizontalAlignment="Right" Margin="200 0" Click="MultiNeuronSkipAll_click"/>
            <TextBlock x:Name="Alert2" Grid.Column="1" Grid.Row="2" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="5" FontWeight="Bold" Foreground="Green"/>
        </Grid>
    </Grid>
</Window>
